<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xmlns:aop="http://www.springframework.org/schema/aop"
		 xmlns:tx="http://www.springframework.org/schema/tx"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		 http://www.springframework.org/schema/tx 
		 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		 http://www.springframework.org/schema/context 
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		 
		 <!-- 
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
     	<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@10.108.226.116:1521:bomc" />
		<property name="user" value="boms301" />
		<property name="password" value="asiainfo" />
     </bean>
		  -->
	 <!-- 数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/justice?useUnicode=true&amp;characterEncoding=UTF8"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	
	<!-- Hibernate的sessionfactory配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" /><!-- 数据源 -->
        <property name="hibernateProperties">
			<props>
				<!--数据库方言配置，功能：告知hibernate所用的DBMS,然后hibernate会根据具体的DBMS生成优化的SQL语句
				 <prop key="hibernate.dialect">org.hibernate.dialect.Oracle9Dialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop><!-- 在日志上是否打印出sql语句 -->
				<prop key="hibernate.format_sql">true</prop><!-- 先格式化SQL语句，再打印 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 事务后关闭连接
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				 -->
			</props>
		</property>
		<property name="packagesToScan" value="com.xd.cdsifaju.entities"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <!-- 事务管理配置,对应于service层的方法 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    
    
    <!-- spring 配置 -->
    <aop:config>
        <!-- aop:pointcut id="allServiceMethod" expression="execution(* com.asiainfo.ued.statement.service.impl..*.*(..))" /-->
        <aop:pointcut id="allServiceMethod" expression="execution(* com.xd.cdsifaju.*.services..*.*(..))" />
        <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
    </aop:config>
    
    <!-- 开启Annotation -->
    <context:annotation-config/>
    
    <!-- 让Spring通过自动扫描来查询和管理Bean -->
    <context:component-scan base-package="com.xd.cdsifaju"/>
    
    <!-- spring配置结束 -->
</beans>